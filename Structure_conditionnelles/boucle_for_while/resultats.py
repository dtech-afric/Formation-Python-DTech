import numpy as np

# 1Ô∏è‚É£ Demander √† l'utilisateur le nombre de mati√®res
nb_matieres = int(input("Combien de mati√®res voulez-vous entrer ? "))

# 2Ô∏è‚É£ Cr√©er des listes vides pour stocker les mati√®res et les notes
matieres = []
notes = []

# 3Ô∏è‚É£ Boucle pour saisir les mati√®res et les notes
for i in range(nb_matieres):
    matiere = input(f"Entrez le nom de la mati√®re {i+1} : ")
    matieres.append(matiere)
    
    while True:  # boucle pour v√©rifier la validit√© de la note
        try:
            note = float(input(f"Entrez la note pour {matiere} : "))
            if 0 <= note <= 20:
                notes.append(note)
                break
            else:
                print("Erreur : la note doit √™tre entre 0 et 20.")
        except ValueError:
            print("Erreur : veuillez entrer un nombre valide.")

# 4Ô∏è‚É£ Cr√©er un dictionnaire {mati√®re: note}
note_matieres = dict(zip(matieres, notes))

# 5Ô∏è‚É£ Calculer la moyenne arrondie
moyenne = np.round(sum(note_matieres.values()) / len(note_matieres.values()), 2)

# 6Ô∏è‚É£ Afficher les r√©sultats
print("\n===== R√©sultats =====")
for matiere, note in note_matieres.items():
    print(f"{matiere} : {note}")

print(f"\nMoyenne : {moyenne}")

# 7Ô∏è‚É£ Donner l'appr√©ciation selon la moyenne
if 0 <= moyenne <= 9:
    print("R√©sultat : Redouble ‚ùå")
elif 10 <= moyenne <= 13:
    print("R√©sultat : Passable üôÇ")
elif 14 <= moyenne <= 16:
    print("R√©sultat : Bien üëç")
elif 17 <= moyenne <= 20:
    print("R√©sultat : Excellent üöÄ")
else:
    print("Erreur : moyenne invalide")
